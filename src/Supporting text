Primitives - There are n types of primitives
Byte
Short
Integer
Long
Float
Double
Boolean
Char

byte: The byte data type is an 8-bit signed two's complement integer.
 It has a minimum value of -128 and a maximum value of 127 (inclusive).
 The byte data type can be useful for saving memory in large arrays, where the memory savings actually matters. They can also be used in place of int where their limits help to clarify your code; the fact that a variable's range is limited can serve as a form of documentation.
    review the primitive max and mins and observe the behaviour for breaking them

short: The short data type is a 16-bit signed two's complement integer.
    It has a minimum value of -32,768 and a maximum value of 32,767 (inclusive).
    As with byte, the same guidelines apply: you can use a short to save memory in large arrays,
    in situations where the memory savings actually matters.

Single and Double Precision
Precision refers to the format and amount of space occupied by the type. Single Precision (float) occupies 32 bits (has a width of 32) Double
precision occupies 64 bits (width of 64)

Note that the float has a range from 1.4e-45 to 3.4028235e+38 and double has 4.9e-324 to 1.7976931348623157e+308 and thus double has more precision

Note Double is preferred

It is worth noting that declaring values means that they are read in as the type they are declared as when assigned but it
is good practice to declare with assignment in the type:
float myFloat = 5
same as float myFloat = 5f
Double myDouble = 5d

****************NOTE*****************
In general float and double are great for general floating point operations, however both are not great where precise calculations
are required, this is a limitation with how floating point numbers are stored, and not a java thing. In order to
mitigate this Java has a class called BigDecimal that overcomes this. Currency calculations should not use floating point. 
